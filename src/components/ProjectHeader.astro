---
import type { HTMLAttributes } from "astro/types"
import type { CollectionEntry } from "astro:content"

import Image from "@components/Image.astro"
import { RWBBalancer as Balancer } from "@components/RWBBalancer"
import { machineDate, readableDate } from "@lib/dates"
import { smarty } from "@lib/smartypants"

interface Props extends HTMLAttributes<"header"> {
	data: CollectionEntry<"project">["data"]
}

const { data, ...attrs } = Astro.props as Props
---

<header {...attrs}>
	<h1 class="mb-6 font-serif text-4xl font-semibold leading-tight tracking-tight md:text-5xl">
		<Balancer>
			<Fragment set:html={smarty(data.title)} />
		</Balancer>
	</h1>
	<p
		class="text-base text-gray-500 dark:text-gray-400 sm:text-lg"
		set:html={smarty(data.description)}
	/>
	{
		!!data.image && (
			<div class="-mx-4 mt-14 sm:-mx-8">
				<Image
					src={data.image.src}
					alt={data.image.alt}
					class="aspect-[4/3] w-full sm:rounded-lg"
					loading="eager"
				/>
			</div>
		)
	}
	{
		!!data.tools && !!data.roles && !!data.published && !!data.duration && (
			<div class="-m-4 grid grid-cols-2 gap-y-4 gap-x-2 bg-gray-200 px-4 py-10 text-sm dark:bg-black sm:-m-5 sm:mt-14 sm:rounded-lg sm:p-5 md:grid-cols-4 md:gap-9">
				<div>
					<span class="mb-1 font-semibold">My role</span>
					<ul class="text-gray-11" role="list">
						{[...data.roles]
							.sort((a, b) => a.localeCompare(b))
							.map((role) => (
								<li>{role}</li>
							))}
					</ul>
				</div>
				<div>
					<span class="mb-1 font-semibold">Tools</span>
					<ul class="text-gray-11" role="list">
						{[...data.tools]
							.sort((a, b) => a.localeCompare(b))
							.map((tool) => (
								<li>{tool}</li>
							))}
					</ul>
				</div>
				<div>
					<span class="mb-1 font-semibold">Timeline</span>
					<p class="text-gray-11" set:html={`${data.duration.from}&ndash;${data.duration.to}`} />
				</div>
				<div>
					<span class="mb-1 font-semibold">Published</span>
					<br />
					<time
						class="text-gray-11 inline-block"
						set:html={readableDate(data.published)}
						datetime={machineDate(data.published)}
					/>
				</div>
			</div>
		)
	}
</header>
