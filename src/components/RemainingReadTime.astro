---
---

<div class="fixed bottom-8 right-8 z-50">
	<div
		class="relative mx-auto inline-block rounded-full bg-gray-1000 px-3 py-2 text-xs tabular-nums backdrop-blur-lg"
	>
		<span class="inline-block origin-bottom will-change-transform" id="readingTimeValue">0</span> min
		read
	</div>
</div>

<script>
	function estimateRemainingReadingTime() {
		const content = document.querySelector("article")!
		const contentHeight = content.offsetHeight
		const scrollTop = window.pageYOffset || document.documentElement.scrollTop
		const contentTop = content.getBoundingClientRect().top + scrollTop
		const contentBottom = contentTop + contentHeight
		const windowHeight = window.innerHeight
		const scrollPosition = scrollTop + windowHeight

		const words = content.innerText.split(" ").length
		const readingSpeed = 250 // Words per minute
		const totalReadingTime = words / readingSpeed

		const scrollPercentage = (scrollPosition - contentTop) / (contentBottom - contentTop)
		const timeElapsed = totalReadingTime * scrollPercentage
		const timeRemaining = totalReadingTime - timeElapsed

		if (scrollPercentage >= 1) {
			return 0 // Content has been fully read
		}

		return Math.ceil(timeRemaining) // Remaining reading time in minutes, rounded up
	}

	let previousRemainingTime = 0
	let currentRemainingTime = 0
	let lastScrollPosition = window.pageYOffset || document.documentElement.scrollTop

	function updateReadingTimeValue() {
		const readingTimeValue = document.querySelector("#readingTimeValue")!
		readingTimeValue.innerText = currentRemainingTime
	}

	function animateReadingTime() {
		const increment = Math.sign(currentRemainingTime - previousRemainingTime)

		if (previousRemainingTime !== currentRemainingTime) {
			previousRemainingTime += increment

			const scale = 1 + Math.abs(increment) * 0.1
			const duration = 150 // You can adjust the duration of the animation
			const readingTimeValue = document.getElementById("readingTimeValue")
			readingTimeValue.style.transition = `transform ${duration}ms cubic-bezier(0.4, 0, 0.2, 1)`
			readingTimeValue.style.transform = `scaleY(${scale})`

			setTimeout(() => {
				updateReadingTimeValue()
				readingTimeValue.style.transition = `transform ${duration}ms cubic-bezier(0.4, 0, 0.2, 1)`
				readingTimeValue.style.transform = `scaleY(1)`
			}, duration)
		}
	}

	function updateRemainingReadingTime() {
		const newRemainingTime = estimateRemainingReadingTime()

		if (newRemainingTime !== currentRemainingTime) {
			currentRemainingTime = newRemainingTime
			animateReadingTime()
		}
	}

	window.addEventListener("scroll", () => {
		const currentScrollPosition = window.pageYOffset || document.documentElement.scrollTop
		const scrollSpeed = Math.abs(currentScrollPosition - lastScrollPosition)

		updateRemainingReadingTime()

		lastScrollPosition = currentScrollPosition
	})

	// Call the updateRemainingReadingTime function on initial page load
	updateRemainingReadingTime()
</script>
